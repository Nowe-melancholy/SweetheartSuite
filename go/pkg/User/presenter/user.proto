syntax = "proto3";

package SweetheartSuite.v2;

option go_package = "SweetheartSuite/v2/pkg/User/presenter";

service User {
    rpc AddUser(AddUserRequest) returns (AddUserResponse) {}
    rpc GetUserByMailAddress(GetUserByMailAddressRequest) returns (GetUserByMailAddressResponse) {}
    rpc GetCouple(GetCoupleRequest) returns (GetCoupleResponse) {}
    rpc GetRequestByToUserId(GetRequestByToUserIdRequest) returns (GetRequestByToUserIdResponse) {}
    rpc GetRequestByFromUserId(GetRequestByFromUserIdRequest) returns (GetRequestByFromUserIdResponse) {}
}

enum Gender {
    GENDER_UNKNOWN = 0;
    MAN = 1;
    WOMAN = 2;
}

enum RequestStatus {
    REQUEST_STATUS_UNKNOWN = 0;
    REQUEST_STATUS_PENDING = 1;
    REQUEST_STATUS_ACCEPTED = 2;
    REQUEST_STATUS_REJECTED = 3;
}

message AddUserRequest {
    string name = 1;
    string mailAddress = 2;
    Gender gender = 3;
}

message AddUserResponse {
    string userId = 1;
}

message GetUserByMailAddressRequest {
    string mailAddress = 1;
}

message GetUserByMailAddressResponse {
    string id = 1;
    string name = 2;
    string mailAddress = 3;
    Gender gender = 4;
}

message GetCoupleRequest {
}

message GetCoupleResponse {
    string coupleId = 1;
}

message GetRequestByToUserIdRequest {
}

message GetRequestByToUserIdResponse {
    string id = 1;
    string fromUserId = 2;
    RequestStatus status = 3;
}

message GetRequestByFromUserIdRequest {
}

message GetRequestByFromUserIdResponse {
    string id = 1;
    string toUserId = 2;
    RequestStatus status = 3;
}
